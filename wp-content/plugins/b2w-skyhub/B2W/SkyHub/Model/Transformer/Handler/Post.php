<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\SkyHub\Model\Transformer\Handler;


/**
 * Class Post
 * @package B2W\SkyHub\Model\Transformer\Handler
 */
class Post
{
    /**
     * @var null
     */
    protected $_post       = array();
    /**
     * @var null
     */
    protected $_meta       = array();
    /**
     * @var string
     */
    protected $_tableName  = 'post';
    /**
     * @var null
     */
    protected $_postFields = null;

    /**
     * @param $name
     * @return $this
     */
    public function setTableName($name)
    {
        $this->_tableName = $name;
        return $this;
    }

    /**
     * @param $key
     * @param $value
     * @return $this
     */
    public function addData($key, $value)
    {
        if ($this->_isMeta($key)) {
            $this->_meta[$key] = $value;
            return $this;
        }

        $this->_post[$key] = $value;

        return $this;
    }

    /**
     * @param $key
     * @return bool
     */
    protected function _isMeta($key)
    {
        global $wpdb;

        if (is_null($this->_postFields)) {
            $prefix = $wpdb->prefix;
            foreach ($wpdb->get_results("DESCRIBE {$prefix}{$this->_tableName}") as $row) {
                $this->_postFields[] = $row->Field;
            }
        }

        return !in_array($key, $this->_postFields);
    }

    /**
     * @param Post $post
     * @return $this
     */
    public function merge(Post $post)
    {
        foreach ($post->flat() as $k => $v) {
            $this->addData($k, $v);
        }

        return $this;
    }

    /**
     * @return array
     */
    public function result()
    {
        return array_merge(
            $this->_post,
            array('meta_input' => $this->_meta)
        );
    }

    /**
     * @return array
     */
    public function flat()
    {
        return array_merge(
            $this->_post, $this->_meta
        );
    }

    /**
     * @return null
     */
    public function post()
    {
        return $this->_post;
    }

    /**
     * @return null
     */
    public function meta()
    {
        return $this->_meta;
    }

    /**
     * @param $key
     * @return bool
     */
    public function data($key)
    {
        foreach ($this->_post as $k => $v) {
            if ($k == $key) {
                return $v;
            }
        }

        foreach ($this->_meta as $k => $v) {
            if ($k == $key) {
                return $v;
            }
        }

        return false;
    }
}
