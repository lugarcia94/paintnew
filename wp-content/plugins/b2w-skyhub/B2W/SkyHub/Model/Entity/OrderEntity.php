<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2019 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 * @author        Tiago Tescaro <tiago.tescaro.@b2wdigital.com>
 */

namespace B2W\SkyHub\Model\Entity;

use B2W\SkyHub\Contract\Entity\Order\PaymentEntityInterface;
use B2W\SkyHub\Contract\Entity\Order\StatusEntityInterface;
use B2W\SkyHub\Model\Entity\Order\PaymentEntity;
use B2W\SkyHub\Model\Resource\Collection;

/**
 * Class OrderEntity
 * @package B2W\SkyHub\Model\Entity
 */
class OrderEntity extends EntityAbstract implements \B2W\SkyHub\Contract\Entity\OrderEntityInterface
{
    /** @var string */
    protected $_id                          = null;
    /** @var string */
    protected $_code                        = null;
    /** @var string */
    protected $_channel                     = null;
    /** @var \DateTime */
    protected $_placed_at                    = null;
    /** @var \DateTime */
    protected $_updated_at                  = null;
    /** @var float */
    protected $_total_ordered               = null;
    /** @var float */
    protected $_interest                    = null; //juros do pedido
    /** @var float */
    protected $_shipping_cost               = null;
    /** @var string */
    protected $_shipping_method             = null;
    /** @var \DateTime */
    protected $_estimated_delivery          = null;
    /** @var \B2W\SkyHub\Contract\Entity\Order\AddressEntityInterface */
    protected $_shipping_address            = null;
    /** @var \B2W\SkyHub\Contract\Entity\Order\AddressEntityInterface */
    protected $_billing_address             = null;
    /** @var \B2W\SkyHub\Model\Entity\CustomerEntity */
    protected $_customer                    = null;
    /** @var Collection */
    protected $_items                       = null;
    /** @var StatusEntityInterface */
    protected $_status                      = null;
    /** @var Collection */
    protected $_invoices                    = null;
    /** @var Collection */
    protected $_shipments                   = null;
    /** @var string */
    protected $_syncStatus                  = null;
    /** @var string */
    protected $_calculation_type            = null; //Tipo de Calculo do Frete , Exemplo B2WENTREGA
    /** @var string */
    protected $_shipping_carrier            = null;
    /** @var array */
    protected $_tags                        = null; //Campo informa se pedido pode conter fraude
    /** @var PaymentEntity */
    protected $_payments                    = null;
    /** @var \DateTime */
    protected $_estimated_delivery_shift    = null;
    /** @var array  */
    protected $_additional_data             = array();

    /** @var String */
    const ORDER_CALCULATION_TYPE_B2W_ENTREGAS_CORREIOS = 'b2wentregacorreios';
    /** @var String */
    const ORDER_CALCULATION_TYPE_B2W_ENTREGAS_DIRECT = 'b2wentregadirect';

    /**
     * @return string
     */
    public function getId()
    {
        return $this->_id;
    }

    /**
     * @param string $id
     */
    public function setId($id)
    {
        $this->_id = $id;
    }

    /**
     * @return string
     */
    public function getCode()
    {
        return $this->_code;
    }

    /**
     * @param string $code
     */
    public function setCode($code)
    {
        $this->_code = $code;
    }

    /**
     * @return string
     */
    public function getChannel()
    {
        return $this->_channel;
    }

    /**
     * @param string $channel
     */
    public function setChannel($channel)
    {
        $this->_channel = $channel;
    }

    /**
     * @return \DateTime
     */
    public function getPlacedAt()
    {
        return $this->_placed_at;
    }

    /**
     * @param \DateTime $placedAt
     */
    public function setPlacedAt($placedAt)
    {
        if (is_string($placedAt)) {
            $placedAt = new \DateTime($placedAt);
        }

        $this->_placed_at = $placedAt;
    }

    /**
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->_updated_at;
    }

    /**
     * @param \DateTime $updatedAt
     */
    public function setUpdatedAt($updatedAt)
    {
        if (is_string($updatedAt)) {
            $updatedAt = new \DateTime($updatedAt);
        }

        $this->_updated_at = $updatedAt;
    }

    /**
     * @return float
     */
    public function getTotalOrdered()
    {
        return $this->_total_ordered;
    }

    /**
     * @param float $totalOrdered
     */
    public function setTotalOrdered($totalOrdered)
    {
        $this->_total_ordered = $totalOrdered;
    }

    /**
     * @return float
     */
    public function getInterest()
    {
        return $this->_interest;
    }

    /**
     * @param float $interest
     */
    public function setInterest($interest)
    {
        $this->_interest = $interest;
    }

    /**
     * @return float
     */
    public function getShippingCost()
    {
        return $this->_shipping_cost;
    }

    /**
     * @param float $shippingCost
     */
    public function setShippingCost($shippingCost)
    {
        $this->_shipping_cost = $shippingCost;
    }

    /**
     * @return string
     */
    public function getShippingMethod()
    {
        return $this->_shipping_method;
    }

    /**
     * @param string $shippingMethod
     */
    public function setShippingMethod($shippingMethod)
    {
        $this->_shipping_method = $shippingMethod;
    }

    /**
     * @return \DateTime
     */
    public function getEstimatedDelivery()
    {
        return $this->_estimated_delivery;
    }

    /**
     * @param \DateTime $estimatedDelivery
     */
    public function setEstimatedDelivery($estimatedDelivery)
    {
        if (is_string($estimatedDelivery)) {
            $estimatedDelivery = new \DateTime($estimatedDelivery);
        }

        $this->_estimated_delivery = $estimatedDelivery;
    }

    /**
     * @return \B2W\SkyHub\Contract\Entity\Order\AddressEntityInterface
     */
    public function getShippingAddress()
    {
        return $this->_shipping_address;
    }

    /**
     * @param \\B2W\SkyHub\Contract\Entity\Order\AddressEntityInterface $shippingAddress
     */
    public function setShippingAddress($shippingAddress)
    {
        $this->_shipping_address = $shippingAddress;
    }

    /**
     * @return \B2W\SkyHub\Contract\Entity\Order\AddressEntityInterface
     */
    public function getBillingAddress()
    {
        return $this->_billing_address;
    }

    /**
     * @param \B2W\SkyHub\Contract\Entity\Order\AddressEntityInterface $billingAddress
     */
    public function setBillingAddress($billingAddress)
    {
        $this->_billing_address = $billingAddress;
    }

    /**
     * @return \B2W\SkyHub\Model\Entity\CustomerEntity
     */
    public function getCustomer()
    {
        return $this->_customer;
    }

    /**
     * @param $customer
     * @return $this|mixed
     */
    public function setCustomer($customer)
    {
        $this->_customer = $customer;
        return $this;
    }

    /**
     * @return Collection
     */
    public function getItems()
    {
        return $this->_items;
    }

    /**
     * @param $items
     * @return $this|mixed
     */
    public function setItems($items)
    {
        $this->_items = $items;
        return $this;
    }

    /**
     * @return StatusEntityInterface
     */
    public function getStatus()
    {
        return $this->_status;
    }

    /**
     * @param StatusEntityInterface $status
     * @return $this|mixed
     */
    public function setStatus(StatusEntityInterface $status)
    {
        $this->_status = $status;
        return $this;
    }

    /**
     * @return Collection
     */
    public function getInvoices()
    {
        if (is_null($this->_invoices)) {
            $this->_invoices = new Collection();
        }

        return $this->_invoices;
    }

    /**
     * @param Collection $invoices
     */
    public function setInvoices($invoices)
    {
        $this->_invoices = $invoices;
    }

    /**
     * @return Collection
     */
    public function getShipments()
    {
        return $this->_shipments;
    }

    /**
     * @param Collection $shipments
     */
    public function setShipments($shipments)
    {
        $this->_shipments = $shipments;
    }

    /**
     * @return string
     */
    public function getSyncStatus()
    {
        return $this->_syncStatus;
    }

    /**
     * @param string $syncStatus
     */
    public function setSyncStatus($syncStatus)
    {
        $this->_syncStatus = $syncStatus;
    }

    /**
     * @return string
     */
    public function getCalculationType()
    {
        return $this->_calculation_type;
    }

    /**
     * @param string $calculationType
     */
    public function setCalculationType($calculationType)
    {
        $this->_calculation_type = $calculationType;
    }

    /**
     * @return Bollean
     */
    public function isB2WEntregas()
    {
        if ($this->getCalculationType() == self::ORDER_CALCULATION_TYPE_B2W_ENTREGAS_CORREIOS) {
            return true;
        }

        if ($this->getCalculationType() == self::ORDER_CALCULATION_TYPE_B2W_ENTREGAS_DIRECT) {
            return true;
        }
        return false;
    }

    /**
     * @return string
     */
    public function getShippingCarrier()
    {
        return $this->_shipping_carrier;
    }

    /**
     * @param string $shippingCarrier
     */
    public function setShippingCarrier($shippingCarrier)
    {
        $this->_shipping_carrier = $shippingCarrier;
    }

    /**
     * @return array
     */
    public function getTags()
    {
        return $this->_tags;
    }

    /**
     * @param array $tags
     */
    public function setTags($tags)
    {
        $this->_tags = $tags;
    }

    /**
     * @param null $key
     * @return array|mixed|null
     */
    public function getAdditionalData($key = null)
    {
        if (is_null($key)) {
            return $this->_additional_data;
        }

        return isset($this->_additional_data[$key]) ? $this->_additional_data[$key] : null;
    }

    /**
     * @param $key
     * @param null $value
     * @return $this|mixed
     */
    public function setAdditionalData($key, $value)
    {
        $this->_additional_data[$key] = $value;
        return $this;
    }

    /**
     * @return \B2W\SkyHub\Contract\Entity\OrderEntityInterface
     * @throws \B2W\SkyHub\Exception\Data\RepositoryNotFound
     */
    public function save()
    {
        return \App::repository(\App::REPOSITORY_ORDER)->save($this);
    }

    /**
     * @return $this
     */
    public function loadData()
    {
        $methods = get_class_methods($this);
        foreach ($methods as $method) {
            if (strpos($method, 'get') === 0) {
                $this->$method();
            }
        }

        return $this;
    }

    /**
     * @return PaymentEntityInterface
     *
     */
    public function getPayments()
    {
        return $this->_payments;
    }

    /**
     * @param PaymentEntityInterface $payments
     */
    public function setPayments($payments)
    {
        $this->_payments = $payments;
    }

    /**
     * @return \DateTime
     */
    public function getEstimatedDeliveryShift()
    {
        return $this->_estimated_delivery_shift;
    }

    /**
     * @param \DateTime $estimated_delivery_shift
     */
    public function setEstimatedDeliveryShift($estimated_delivery_shift)
    {
        $this->_estimated_delivery_shift = $estimated_delivery_shift;
    }

    /**
     * Send Email New Order
     * 
     * @return Bollean
     */
    public function emailNewOrder()
    {
        $order = wc_get_order( $this->getId() );
        if (!$order) {
            return false;
        }
        $skyhub_order_send_email = get_metadata('post', $this->getId(), '_skyhub_order_send_email');

        if ($skyhub_order_send_email) {
            return true;
        }

        add_metadata('post', $this->getId(), '_skyhub_order_send_email', 'true');
        WC()->mailer()->emails['WC_Email_New_Order']->trigger( $order->get_id(), $order );
    }
}
