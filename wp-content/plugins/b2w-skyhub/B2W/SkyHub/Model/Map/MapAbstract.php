<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\SkyHub\Model\Map;

use B2W\SkyHub\Model\Resource\Collection;

/**
 * Class MapAbstract
 * @package B2W\SkyHub\Model
 */
abstract class MapAbstract
{
    /**
     * @var null
     */
    protected $_map     = null;

    /**
     * @return string
     */
    abstract protected function _getConfigPath();

    /**
     * @return string
     */
    abstract protected function _getOptionsName();

    /**
     * @return Collection
     */
    public function map()
    {
        if (is_null($this->_map)) {

            $map        = $this->_loadMap();
            $options    = $this->_getOptions();

            if ($options) {
                /** @var MapAttribute $attr */
                foreach ($map as $attr) {
                    foreach ($options as $option) {
                        if ($option['skyhub'] == $attr->getSkyhub() && !empty($option['wordpress'])) {
                            $attr->setWordpress($option['wordpress']);
                            break;
                        }
                    }
                }
            }

            $this->_map = $map;
        }

        return $this->_map;
    }

    /**
     * @return mixed|null
     */
    protected function _getOptions()
    {
        if (!$this->_getOptionsName()) {
            return null;
        }

        return unserialize(get_option($this->_getOptionsName(), null));
    }


    /**
     * @param $attr
     * @param $related
     * @return bool
     * @throws \B2W\SkyHub\Exception\Helper\HelperNotFound
     */
    public function setRelated($attr, $related)
    {
        $map    = $this->map();
        /** @var MapAttribute $item */
        $item   = $map->getItemByKey('_skyhub', $attr);

        if (!$item) {
            return false;
        }

        $item->setWordpress($related);

        return true;
    }

    /**
     * @return $this
     */
    public function save()
    {
        $map = $this->map();

        if ($this->_getOptionsName()) {

            $save = array();
            /** @var MapAttribute $attr */
            foreach ($map as $attr) {
                if (!$attr->getWordpress()) {
                    continue;
                }

                $save[] = array(
                    'skyhub'    => $attr->getSkyhub(),
                    'wordpress' => $attr->getWordpress()
                );
            }

            update_option($this->_getOptionsName(), serialize($save));
        }

        return $this;
    }

    /**
     * @return Collection
     */
    protected function _loadMap()
    {
        $config     = \App::config($this->_getConfigPath());
        $collection = new Collection();

        foreach ($config as $attribute) {

            $map = new MapAttribute();

            $map->setSkyhub(isset($attribute['skyhub']) ? $attribute['skyhub'] : null);
            $map->setWordpress(isset($attribute['wordpress']) ? $attribute['wordpress'] : null);
            $map->setMapper(isset($attribute['mapper']) ? $attribute['mapper'] : null);
            $map->setLabel(isset($attribute['label']) ? $attribute['label'] : '');

            if (isset($attribute['show_in_admin'])) {
                $map->setShowInAdmin($attribute['show_in_admin']);
            }

            $collection->addItem($map);
        }

        return $collection;
    }
}
