<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\SkyHub\Model\Repository\Product;


use B2W\SkyHub\Contract\Entity\ProductEntityInterface;
use B2W\SkyHub\Model\Transformer\Product\EntityToApi;
use B2W\SkyHub\Model\Validation\ProductEntityValidator;
use SkyHub\Api\Handler\Response\HandlerDefault;

/**
 * Class ProductApiRepository
 * @package B2W\SkyHub\Model\Repository\Product
 */
class ProductApiRepository
{
    /**
     * @param ProductEntityInterface $product
     * @return null|HandlerDefault|\SkyHub\Api\Handler\Response\HandlerInterface
     * @throws \B2W\SkyHub\Exception\Integrator\Catalog\Product\Validation\AttributeRequiredException
     * @throws \B2W\SkyHub\Exception\Integrator\Catalog\Product\Validation\DownloadableProductException
     * @throws \B2W\SkyHub\Exception\Integrator\Catalog\Product\Validation\VirtualProductException
     */
    public function save(ProductEntityInterface $product)
    {
        /** @var HandlerDefault $response */
        $response = $this->_update($product);
        if ($response && $response->success()) {
            return $response;
        }

        /** Create Product */
        $response = $this->_create($product);

        return $response;
    }

    /**
     * @param ProductEntityInterface $product
     * @return null|\SkyHub\Api\Handler\Response\HandlerInterface
     * @throws \B2W\SkyHub\Exception\Integrator\Catalog\Product\Validation\AttributeRequiredException
     * @throws \B2W\SkyHub\Exception\Integrator\Catalog\Product\Validation\DownloadableProductException
     * @throws \B2W\SkyHub\Exception\Integrator\Catalog\Product\Validation\VirtualProductException
     */
    protected function _update(ProductEntityInterface $product)
    {
        $response = null;
        $validator = new ProductEntityValidator();
        $validator->validate($product);

        try {
            /** @var \SkyHub\Api\EntityInterface\Catalog\Product $interface */
            $interface = $this->_convert($product);
            $response  = $interface->update();
        } catch (\Exception $e) {
            \App::logException($e);
        }

        return $response;
    }

    /**
     * @param ProductEntityInterface $product
     * @return null|\SkyHub\Api\Handler\Response\HandlerInterface
     */
    protected function _create(ProductEntityInterface $product)
    {
        $response = null;

        try {
            $validator = new ProductEntityValidator();
            $validator->validate($product);

            /** @var \SkyHub\Api\EntityInterface\Catalog\Product $interface */
            $interface = $this->_convert($product);
            $response  = $interface->create();
        } catch (\Exception $e) {
            \App::logException($e);
        }

        return $response;
    }

    /**
     * @param $product
     * @return null
     * @throws \B2W\SkyHub\Exception\Helper\HelperNotFound
     */
    protected function _convert($product)
    {
        $transformer = new EntityToApi();
        return $transformer->convert($product);
    }
}
